How to untie a program from the global filesystem:
* Run every executable from the directory it is in, so it will be able to access its surrounding files
* Do not use `..` or FS root at all, instead use paths passed in by the caller (for example, through env variables)
* `.` (that is, any path that starts with "./", or "." itself) should only be used to access other parts of the same executable (for example, when it's one script consisting of several files)
This ruleset allows all programs to have independent storages (like the program being a C++ `class` and all its storages being its "instances" that are able to operate fully independently) and enables the caller to orchestrate such programs
